% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CFGL.R
\name{CFGL}
\alias{CFGL}
\title{Condition-adaptive fused graphical lasso}
\usage{
CFGL(Y, lambda1, lambda2, btc.screening = NULL, penalize.diag = c(TRUE,
  TRUE), weights = NULL, rho = 1, rho.increment = 1, maxiter = 500,
  tol = 1e-04, truncate = 1e-05, loglik.trace = FALSE)
}
\arguments{
\item{Y}{A list expression data which are n*p matrices. all matrices should have a same n and p.}

\item{lambda1}{The tuning parameter for the graphical lasso penalty.}

\item{lambda2}{The tuning parameter for the between condition group lasso penalty.}

\item{btc.screening}{A list of screening matrices (p*p) for between condition penalty. Can be obtained using the function \code{get_scr_mat}. When setting as NULL, the function will perform a standard fused graphical lasso.}

\item{penalize.diag}{Binary variables that determine whether lambda1 and lambda2 are applied to the diagonal of inverse matrices.}

\item{rho}{Step size parameter for ADMM algorithm. Large values decrease the step size.}

\item{rho.increment}{Adjustment for rho. In each ADMM iteration, rho will be updated as rho=rho*rho.increment.}

\item{maxiter}{The maximum number of ADMM interactions.}

\item{tol}{The criterion for ADMM convergence.}

\item{truncate}{All value in the estimated inverse convenience below this number will be set to 0.}

\item{loglik.trace}{Store trace of the likelihood of estimation in each iteration.}

\item{weight}{Experimental features that assigning weights to each class. Leaving it as default (NULL) is suggested.}
}
\value{
\code{CFGL} produces a list that contains estimated inverse matrices and other necessary components.
\itemize{
 \item{$theta} {The estimation of inverse matrices}
 \item{$iters} {The numebr of ADMM iterations}
 \item{$loglik.trace} {Trace of log-likelihood}
}
}
\description{
The function jointly construct gene co-expression network for multiple class using Condition-adaptive Fused Graphical Lasso. Pairwise screening matrics are required to adjust between-condition lasso penalty.
}
\details{
Please refer \bold{An adaptive procedure for inferring condition-specific gene co-expression network }
}
\examples{
x = expr
plot(x[,1],x[,2],xlim=c(-8,8),ylim=c(-8,8),cex = .4);
idr.out = IDR.3component(x = x)
}
